document.addEventListener('DOMContentLoaded', () => {
    // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º DOM
    const canvas = document.getElementById('roulette-canvas');
    const spinButton = document.getElementById('spin-button');
    const modal = document.getElementById('result-modal');
    const resultTitle = document.getElementById('result-title');
    const resultText = document.getElementById('result-text');

    // --- –ù–û–í–´–ï –ö–ù–û–ü–ö–ò ---
    const spinAgainButton = document.getElementById('spin-again-button');
    const closeAppButton = document.getElementById('close-app-button');

    const tg = window.Telegram.WebApp;
    tg.ready();

    const ctx = canvas.getContext('2d');
    const segments = [
        { color: '#f9e79f', label: '10', icon: 'üçÑ' },
        { color: '#d5dbdb', label: '–ù—ñ—á–æ–≥–æ', icon: 'üçÇ' },
        { color: '#a9dfbf', label: '–ó–Ω–∏–∂–∫–∞ 5%', icon: 'üè∑Ô∏è' },
        { color: '#f5cba7', label: '25', icon: 'üçÑ' },
        { color: '#aed6f1', label: '–©–µ —Ä–∞–∑', icon: 'üîÑ' },
        { color: '#f1c40f', label: '–ó–Ω–∏–∂–∫–∞ 10%', icon: 'üè∑Ô∏è' },
        { color: '#d7bde2', label: '50', icon: 'üçÑ' },
        { color: '#fAD7A0', label: '100', icon: 'üçÑ' }
    ];

    const segmentCount = segments.length;
    const anglePerSegment = 2 * Math.PI / segmentCount;
    const radius = canvas.width / 2;
    let currentRotation = 0;
    let isSpinning = false;

    // –§—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –æ—Å—Ç–∞–ª–∞—Å—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    function drawRoulette() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        ctx.fillStyle = '#8B4513';
        ctx.beginPath();
        ctx.arc(radius, radius, radius, 0, 2 * Math.PI);
        ctx.fill();
        ctx.strokeStyle = '#5E2F0E';
        ctx.lineWidth = 2;
        for (let i = radius - 20; i > 20; i -= 25) {
            ctx.beginPath();
            ctx.arc(radius, radius, i, 0, 2 * Math.PI);
            ctx.stroke();
        }
        ctx.save();
        ctx.translate(radius, radius);
        segments.forEach((segment, i) => {
            const startAngle = i * anglePerSegment;
            ctx.beginPath();
            ctx.moveTo(0, 0);
            ctx.arc(0, 0, radius - 5, startAngle, startAngle + anglePerSegment);
            ctx.closePath();
            ctx.fillStyle = segment.color;
            ctx.globalAlpha = 0.8;
            ctx.fill();
            ctx.globalAlpha = 1.0;
            ctx.lineWidth = 3;
            ctx.strokeStyle = '#5E2F0E';
            ctx.stroke();
            ctx.save();
            ctx.fillStyle = '#402a1a';
            ctx.textAlign = 'center';
            ctx.textBaseline = 'middle';
            const textAngle = startAngle + anglePerSegment / 2;
            ctx.rotate(textAngle);
            ctx.font = '24px Montserrat';
            ctx.fillText(segment.icon, radius * 0.55, 0);
            ctx.font = 'bold 14px Montserrat';
            ctx.fillText(segment.label, radius * 0.80, 0);
            ctx.restore();
        });
        ctx.restore();
    }

    // –§—É–Ω–∫—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è –æ—Å—Ç–∞–ª–∞—Å—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    function spin() {
        if (isSpinning) return;
        isSpinning = true;
        spinButton.disabled = true;
        spinButton.textContent = '–£–î–ê–ß–Ü!';
        const randomStopAngle = Math.random() * (2 * Math.PI);
        const fullSpins = 7 * (2 * Math.PI);
        const totalRotation = fullSpins + randomStopAngle;
        canvas.style.transform = `rotate(${totalRotation}rad)`;
        currentRotation = totalRotation;
        setTimeout(announceResult, 6200);
    }

    // –§—É–Ω–∫—Ü–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ –æ—Å—Ç–∞–ª–∞—Å—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    function announceResult() {
        const finalAngle = currentRotation % (2 * Math.PI);
        const pointerPosition = (2 * Math.PI) - finalAngle + (anglePerSegment / 2);
        const winningIndex = Math.floor(pointerPosition / anglePerSegment) % segmentCount;
        const winningSegment = segments[winningIndex];
        showModal(winningSegment);
        isSpinning = false;
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –æ—Å—Ç–∞–ª–∞—Å—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    function showModal(prize) {
        const isWin = !(prize.label === '–ù—ñ—á–æ–≥–æ' || prize.label === '–©–µ —Ä–∞–∑');
        if (isWin) {
            resultTitle.textContent = '–í—ñ—Ç–∞—î–º–æ!';
            resultText.innerHTML = `–í–∞—à –≤–∏–≥—Ä–∞—à: <strong>${prize.label} ${prize.icon}</strong>`;
        } else {
            resultTitle.textContent = '–ù–∞ –∂–∞–ª—å...';
            resultText.innerHTML = `–¶—å–æ–≥–æ —Ä–∞–∑—É –Ω–µ –ø–æ—â–∞—Å—Ç–∏–ª–æ. <br>–°–ø—Ä–æ–±—É–π—Ç–µ <strong>${prize.label.toLowerCase()}</strong>!`;
        }
        modal.classList.add('visible');
    }

    // --- –û–ë–ù–û–í–õ–ï–ù–ù–ê–Ø –õ–û–ì–ò–ö–ê –ö–ù–û–ü–û–ö ---

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–©–µ —Ä–∞–∑"
    function playAgain() {
        modal.classList.remove('visible');
        spinButton.disabled = false; // –°–Ω–æ–≤–∞ –∞–∫—Ç–∏–≤–∏—Ä—É–µ–º –≥–ª–∞–≤–Ω—É—é –∫–Ω–æ–ø–∫—É
        spinButton.textContent = '–ö–†–£–¢–ò–¢–ò!';
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫—Ä–∏—Ç–∏"
    function closeApp() {
        tg.close(); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
    }

    // –ù–∞–∑–Ω–∞—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    spinButton.addEventListener('click', spin);
    spinAgainButton.addEventListener('click', playAgain);
    closeAppButton.addEventListener('click', closeApp);

    // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞ –∫–æ–ª–µ—Å–∞
    drawRoulette();
});
