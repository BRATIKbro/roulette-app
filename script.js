document.addEventListener('DOMContentLoaded', () => {
    // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —ç–ª–µ–º–µ–Ω—Ç–∞–º DOM
    const canvas = document.getElementById('roulette-canvas');
    const spinButton = document.getElementById('spin-button');
    const modal = document.getElementById('result-modal');
    const resultTitle = document.getElementById('result-title');
    const resultText = document.getElementById('result-text');
    const spinAgainButton = document.getElementById('spin-again-button');
    const closeAppButton = document.getElementById('close-app-button');

    const tg = window.Telegram.WebApp;
    tg.ready();

    const ctx = canvas.getContext('2d');
    const segments = [
        { color: '#f9e79f', label: '10', icon: 'üçÑ' },
        { color: '#d5dbdb', label: '–ù—ñ—á–æ–≥–æ', icon: 'üçÇ' },
        { color: '#a9dfbf', label: '–ó–Ω–∏–∂–∫–∞ 5%', icon: 'üè∑Ô∏è' },
        { color: '#f5cba7', label: '25', icon: 'üçÑ' },
        { color: '#aed6f1', label: '–©–µ —Ä–∞–∑', icon: 'üîÑ' },
        { color: '#f1c40f', label: '–ó–Ω–∏–∂–∫–∞ 10%', icon: 'üè∑Ô∏è' },
        { color: '#d7bde2', label: '50', icon: 'üçÑ' },
        { color: '#fAD7A0', label: '100', icon: 'üçÑ' }
    ];

    const segmentCount = segments.length;
    const anglePerSegment = 2 * Math.PI / segmentCount;
    const radius = canvas.width / 2;
    let currentRotation = 0;
    let isSpinning = false;

    // –§—É–Ω–∫—Ü–∏—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∏ –æ—Å—Ç–∞–ª–∞—Å—å –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    function drawRoulette() {
        ctx.clearRect(0, 0, canvas.width, canvas.height);
        ctx.fillStyle = '#8B4513';
        ctx.beginPath();
        ctx.arc(radius, radius, radius, 0, 2 * Math.PI);
        ctx.fill();
        ctx.strokeStyle = '#5E2F0E';
        ctx.lineWidth = 2;
        for (let i = radius - 20; i > 20; i -= 25) {
            ctx.beginPath();
            ctx.arc(radius, radius, i, 0, 2 * Math.PI);
            ctx.stroke();
        }
        ctx.save();
        ctx.translate(radius, radius);
        segments.forEach((segment, i) => {
            const startAngle = i * anglePerSegment;
            ctx.beginPath();
            ctx.moveTo(0, 0);
            ctx.arc(0, 0, radius - 5, startAngle, startAngle + anglePerSegment);
            ctx.closePath();
            ctx.fillStyle = segment.color;
            ctx.globalAlpha = 0.8;
            ctx.fill();
            ctx.globalAlpha = 1.0;
            ctx.lineWidth = 3;
            ctx.strokeStyle = '#5E2F0E';
            ctx.stroke();
            ctx.save();
            ctx.fillStyle = '#402a1a';
            ctx.textAlign = 'center';
            ctx.textBaseline = 'middle';
            const textAngle = startAngle + anglePerSegment / 2;
            ctx.rotate(textAngle);
            ctx.font = '24px Montserrat';
            ctx.fillText(segment.icon, radius * 0.55, 0);
            ctx.font = 'bold 14px Montserrat';
            ctx.fillText(segment.label, radius * 0.80, 0);
            ctx.restore();
        });
        ctx.restore();
    }

    // --- –ò–ó–ú–ï–ù–ï–ù–û: –§—É–Ω–∫—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è ---
    function spin() {
        if (isSpinning) return;
        isSpinning = true;
        spinButton.disabled = true;
        spinButton.textContent = '–£–î–ê–ß–Ü!';

        // –í–∫–ª—é—á–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –ø–µ—Ä–µ–¥ –≤—Ä–∞—â–µ–Ω–∏–µ–º
        canvas.style.transition = 'transform 6s cubic-bezier(0.15, 0.75, 0.3, 1)';

        const randomStopAngle = Math.random() * (2 * Math.PI);
        const fullSpins = 7 * (2 * Math.PI);
        const totalRotation = fullSpins + randomStopAngle;

        // –ù–∞–∫–∞–ø–ª–∏–≤–∞–µ–º –æ–±—â–∏–π —É–≥–æ–ª –ø–æ–≤–æ—Ä–æ—Ç–∞
        currentRotation += totalRotation;

        canvas.style.transform = `rotate(${currentRotation}rad)`;

        setTimeout(announceResult, 6200);
    }

    // --- –ò–ó–ú–ï–ù–ï–ù–û: –§—É–Ω–∫—Ü–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞ ---
    function announceResult() {
        const finalAngle = currentRotation % (2 * Math.PI);
        const pointerPosition = (2 * Math.PI) - finalAngle + (anglePerSegment / 2);
        const winningIndex = Math.floor(pointerPosition / anglePerSegment) % segmentCount;
        const winningSegment = segments[winningIndex];

        showModal(winningSegment);
        isSpinning = false;

        // --- –î–û–ë–ê–í–õ–ï–ù –ë–õ–û–ö –°–ë–†–û–°–ê –ê–ù–ò–ú–ê–¶–ò–ò ---
        // –ü–æ—Å–ª–µ –ø–æ–∫–∞–∑–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞, –º—ã "—Å–±—Ä–∞—Å—ã–≤–∞–µ–º" –∫–æ–ª–µ—Å–æ –≤ –µ–≥–æ –∫–æ–Ω–µ—á–Ω–æ–µ –ø–æ–ª–æ–∂–µ–Ω–∏–µ
        // –±–µ–∑ –∞–Ω–∏–º–∞—Ü–∏–∏, —á—Ç–æ–±—ã —Å–ª–µ–¥—É—é—â–∏–π –ø—Ä–æ–∫—Ä—É—Ç –±—ã–ª "—á–∏—Å—Ç—ã–º".
        setTimeout(() => {
            // 1. –í—ã–∫–ª—é—á–∞–µ–º –ø–ª–∞–≤–Ω—ã–π –ø–µ—Ä–µ—Ö–æ–¥
            canvas.style.transition = 'none';
            // 2. –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏—Ç–æ–≥–æ–≤—ã–π —É–≥–æ–ª (–æ—Å—Ç–∞—Ç–æ–∫ –æ—Ç –¥–µ–ª–µ–Ω–∏—è –Ω–∞ 360 –≥—Ä–∞–¥—É—Å–æ–≤)
            const actualFinalRotation = currentRotation % (2 * Math.PI);
            canvas.style.transform = `rotate(${actualFinalRotation}rad)`;
            // 3. –û–±–Ω–æ–≤–ª—è–µ–º currentRotation, —á—Ç–æ–±—ã –æ–Ω –Ω–µ –Ω–∞–∫–∞–ø–ª–∏–≤–∞–ª—Å—è –±–µ—Å–∫–æ–Ω–µ—á–Ω–æ
            currentRotation = actualFinalRotation;
        }, 500); // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –ø–æ—Å–ª–µ –æ–∫–æ–Ω—á–∞–Ω–∏—è –∞–Ω–∏–º–∞—Ü–∏–∏
    }

    // –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    function showModal(prize) {
        const isWin = !(prize.label === '–ù—ñ—á–æ–≥–æ' || prize.label === '–©–µ —Ä–∞–∑');
        if (isWin) {
            resultTitle.textContent = '–í—ñ—Ç–∞—î–º–æ!';
            resultText.innerHTML = `–í–∞—à –≤–∏–≥—Ä–∞—à: <strong>${prize.label} ${prize.icon}</strong>`;
        } else {
            resultTitle.textContent = '–ù–∞ –∂–∞–ª—å...';
            resultText.innerHTML = `–¶—å–æ–≥–æ —Ä–∞–∑—É –Ω–µ –ø–æ—â–∞—Å—Ç–∏–ª–æ. <br>–°–ø—Ä–æ–±—É–π—Ç–µ <strong>${prize.label.toLowerCase()}</strong>!`;
        }
        modal.classList.add('visible');
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–©–µ —Ä–∞–∑" –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    function playAgain() {
        modal.classList.remove('visible');
        spinButton.disabled = false;
        spinButton.textContent = '–ö–†–£–¢–ò–¢–ò!';
    }

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–Ω–æ–ø–∫–∏ "–ó–∞–∫—Ä–∏—Ç–∏" –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    function closeApp() {
        tg.close();
    }

    // –ù–∞–∑–Ω–∞—á–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –±–µ–∑ –∏–∑–º–µ–Ω–µ–Ω–∏–π
    spinButton.addEventListener('click', spin);
    spinAgainButton.addEventListener('click', playAgain);
    closeAppButton.addEventListener('click', closeApp);

    // –ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–∞—è –æ—Ç—Ä–∏—Å–æ–≤–∫–∞
    drawRoulette();
});
